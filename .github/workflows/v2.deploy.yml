name: V2Deploy

on:
  push:
    tags:
      - 'v2.[0-9]+.[0-9]+'

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: v2
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.14.0'
      - name: build
        run: 'make release'
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Assets
        uses: actions/github-script@v2
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          script: |
            const fs = require('fs');

            const url = core.getInput('upload_url', { required: true });
            console.log({ upload_url: url });

            const contentLength = (filePath) => fs.statSync(filePath).size;
            const buildDir = 'v2/build'

            for (const name of fs.readdirSync(buildDir)) {
              try {
                if (name.endsWith('.zip')) {
                  const filePath = `${buildDir}/${name}`;
                  const headers = {
                    'content-type': 'application/zip',
                    'content-length': contentLength(filePath),
                  };

                  console.log('uploading', name, filePath);

                  await github.repos.uploadReleaseAsset({
                    url,
                    headers,
                    name,
                    file: fs.createReadStream(filePath),
                  });
                }
              } catch (e) {
                core.setFailed(e.message);
              }
            }
